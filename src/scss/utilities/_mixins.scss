// responsive
@mixin breakpoint($size) {
    @media (mediaQuery("property"): #{ 
            breakpoint($size) + 
            mediaQuery("unit")
		}
	) {
        @content;
    }
}
@mixin desktop {
    @media not all and (hover: none) {
        @content;
    }
}

// transitions and states
@mixin transition($type, $properties...) {
	$transition: map-get($transitions, $type);
    transition-property: $properties;

	@each $property, $value in $transition {
		transition-#{$property}: $value;
	}
}
@mixin state(
    $states, 
    $onlyProperty: null,
    $typeTransition: button
) {
    $isSVG: isSVG($onlyProperty);
    $property: null;
    $value: null;

    @each $state, $stateValue in $states {
        @if $state == default {
            @if $onlyProperty and $isSVG {
                path {@include transition($typeTransition, $onlyProperty)};

            } @else if $onlyProperty {
                @include transition($typeTransition, $onlyProperty);

            } @else {
                @include transition($typeTransition, map-keys($stateValue));
            }
        }

        @each $eachProperty, $eachValue in $stateValue {
            @if $onlyProperty {
                $property: $onlyProperty;
                $value: $stateValue;
            } @else {
                $property: $eachProperty;
                $value: $eachValue;
            }
            
            @if $state == default {
                @if $isSVG {
                    path {#{$property}: $value;};

                } @else {
                    #{$property}: $value;
                }

            } @else if $state == hover {
                &:hover #{$isSVG} {
                    #{$property}: $value;
                }

            } @else if $state == active {
                &:active #{$isSVG} {
                    #{$property}: $value;
                }
            }
        }
    }
}

// general
@mixin center {
    margin-left: auto;
    margin-right: auto;
}